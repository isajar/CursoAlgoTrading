rm(list = ls())
library(e1071)
library(scales)
getwd()
gold_data <- read.csv(paste(getwd(),"gld_price_data.csv", sep = ""),sep = ",",header = T)
gold_data <- read.csv(paste(getwd(),"/gld_price_data.csv", sep = ""),sep = ",",header = T)
gold_data <- gold_data[,-c(1,3)]
head(gold_data)
train <- as.data.frame(gold_final[1:2000,])
test <- as.data.frame((gold_final[2001:nrow(gold_final),]))
test <- test[,-5]
model_nb <- naiveBayes(train$gold_data.GLD_TREND ~.,data=train)
gold_final <- data.frame(cbind(gold_data_norm,gold_data$GLD_TREND))
train <- as.data.frame(gold_data[1:2000,])
test <- as.data.frame((gold_data[2001:nrow(gold_final),]))
test <- as.data.frame((gold_data[2001:nrow(gold_data),]))
test <- test[,-5]
model_nb <- naiveBayes(train$gold_data.GLD_TREND ~.,data=train)
model_nb <- naiveBayes(GLD_TREND ~.,data=train)
predict(model_nb, test)
model_nb
predict
predict(model_nb, test)
test
train
head(train)
head(test)
a<-predict(model_nb, test)
a
a[1]
class(a)
naiveBayes
model_nb
predict(model_nb, train)
predict(model_nb, test)
class(test)
class(train)
nrow(test)
nrow(train)
?naiveBayes
test <- as.data.frame((gold_data[2001:nrow(gold_data),]))
head(test)
predict(model_nb, test)
table(predict(model_nb, test))
