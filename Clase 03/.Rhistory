col="red", lty=1:2, cex=0.8)
# set the plotting area into a 1*2 array
par(mfrow=c(2,2))
#PLOT 1
plot(res$Prob,ylab = "Prob", xlab = "N sample", type = "b", main = "Try 1")
lines(x=c(0,6),y=c(1/3,1/3),co="red",lwd=2)
legend("right", legend="Target Prob",
col="red", lty=1:2, cex=0.8)
#PLOT 2
plot(res2$Prob,ylab = "Prob", xlab = "N sample", type = "b", main =  "Try 2")
lines(x=c(0,6),y=c(1/3,1/3),co="red",lwd=2)
legend("right", legend="Target Prob",
col="red", lty=1:2, cex=0.8)
#PLOT 3
plot(res3$Prob,ylab = "Prob", xlab = "N sample", type = "b", main = "Try 3")
lines(x=c(0,6),y=c(1/3,1/3),co="red",lwd=2)
legend("right", legend="Target Prob",
col="red", lty=1:2, cex=0.8)
#PLOT 4
plot(res4$Prob,ylab = "Prob", xlab = "N sample", type = "b", main =  "Try 4")
lines(x=c(0,6),y=c(1/3,1/3),co="red",lwd=2)
legend("right", legend="Target Prob",
col="red", lty=1:2, cex=0.8)
mtext("Estimacion de probabilidad", side= 1)
mtext("Estimacion de probabilidad", side= 1, outer=TRUE)
par(mfrow=c(2,2))
mtext("Estimacion de probabilidad", side= 1, outer=TRUE)
#PLOT 1
plot(res$Prob,ylab = "Prob", xlab = "N sample", type = "b", main = "Try 1")
lines(x=c(0,6),y=c(1/3,1/3),co="red",lwd=2)
legend("right", legend="Target Prob",
col="red", lty=1:2, cex=0.8)
#PLOT 2
plot(res2$Prob,ylab = "Prob", xlab = "N sample", type = "b", main =  "Try 2")
lines(x=c(0,6),y=c(1/3,1/3),co="red",lwd=2)
legend("right", legend="Target Prob",
col="red", lty=1:2, cex=0.8)
#PLOT 3
plot(res3$Prob,ylab = "Prob", xlab = "N sample", type = "b", main = "Try 3")
lines(x=c(0,6),y=c(1/3,1/3),co="red",lwd=2)
legend("right", legend="Target Prob",
col="red", lty=1:2, cex=0.8)
#PLOT 4
plot(res4$Prob,ylab = "Prob", xlab = "N sample", type = "b", main =  "Try 4")
lines(x=c(0,6),y=c(1/3,1/3),co="red",lwd=2)
legend("right", legend="Target Prob",
col="red", lty=1:2, cex=0.8)
par(mfrow=c(2,2))
#PLOT 1
plot(res$Prob,ylab = "Prob", xlab = "N sample", type = "b", main = "Try 1")
lines(x=c(0,6),y=c(1/3,1/3),co="red",lwd=2)
legend("right", legend="Target Prob",
col="red", lty=1:2, cex=0.8)
mtext("Estimacion de probabilidad", side= 1, outer=TRUE)
#PLOT 2
plot(res2$Prob,ylab = "Prob", xlab = "N sample", type = "b", main =  "Try 2")
lines(x=c(0,6),y=c(1/3,1/3),co="red",lwd=2)
legend("right", legend="Target Prob",
col="red", lty=1:2, cex=0.8)
#PLOT 3
plot(res3$Prob,ylab = "Prob", xlab = "N sample", type = "b", main = "Try 3")
lines(x=c(0,6),y=c(1/3,1/3),co="red",lwd=2)
legend("right", legend="Target Prob",
col="red", lty=1:2, cex=0.8)
#PLOT 4
plot(res4$Prob,ylab = "Prob", xlab = "N sample", type = "b", main =  "Try 4")
lines(x=c(0,6),y=c(1/3,1/3),co="red",lwd=2)
legend("right", legend="Target Prob",
col="red", lty=1:2, cex=0.8)
# set the plotting area into a 1*2 array
par(mfrow=c(2,2))
#PLOT 1
plot(res$Prob,ylab = "Prob", xlab = "N sample", type = "b", main = "Try 1")
lines(x=c(0,6),y=c(1/3,1/3),co="red",lwd=2)
legend("right", legend="Target Prob",
col="red", lty=1:2, cex=0.8)
mtext("Estimacion de probabilidad", side= 1)
#PLOT 2
plot(res2$Prob,ylab = "Prob", xlab = "N sample", type = "b", main =  "Try 2")
lines(x=c(0,6),y=c(1/3,1/3),co="red",lwd=2)
legend("right", legend="Target Prob",
col="red", lty=1:2, cex=0.8)
#PLOT 3
plot(res3$Prob,ylab = "Prob", xlab = "N sample", type = "b", main = "Try 3")
lines(x=c(0,6),y=c(1/3,1/3),co="red",lwd=2)
legend("right", legend="Target Prob",
col="red", lty=1:2, cex=0.8)
#PLOT 4
plot(res4$Prob,ylab = "Prob", xlab = "N sample", type = "b", main =  "Try 4")
lines(x=c(0,6),y=c(1/3,1/3),co="red",lwd=2)
legend("right", legend="Target Prob",
col="red", lty=1:2, cex=0.8)
# set the plotting area into a 1*2 array
par(mfrow=c(2,2))
#PLOT 1
plot(res$Prob,ylab = "Prob", xlab = "N sample", type = "b", main = "Try 1")
lines(x=c(0,6),y=c(1/3,1/3),co="red",lwd=2)
legend("right", legend="Target Prob",
col="red", lty=1:2, cex=0.8)
#PLOT 2
plot(res2$Prob,ylab = "Prob", xlab = "N sample", type = "b", main =  "Try 2")
lines(x=c(0,6),y=c(1/3,1/3),co="red",lwd=2)
legend("right", legend="Target Prob",
col="red", lty=1:2, cex=0.8)
mtext("Estimacion de probabilidad", side= 1)
#PLOT 3
plot(res3$Prob,ylab = "Prob", xlab = "N sample", type = "b", main = "Try 3")
lines(x=c(0,6),y=c(1/3,1/3),co="red",lwd=2)
legend("right", legend="Target Prob",
col="red", lty=1:2, cex=0.8)
#PLOT 4
plot(res4$Prob,ylab = "Prob", xlab = "N sample", type = "b", main =  "Try 4")
lines(x=c(0,6),y=c(1/3,1/3),co="red",lwd=2)
legend("right", legend="Target Prob",
col="red", lty=1:2, cex=0.8)
# set the plotting area into a 1*2 array
par(mfrow=c(2,2))
#PLOT 1
plot(res$Prob,ylab = "Prob", xlab = "N sample", type = "b", main = "Try 1")
lines(x=c(0,6),y=c(1/3,1/3),co="red",lwd=2)
legend("right", legend="Target Prob",
col="red", lty=1:2, cex=0.8)
#PLOT 2
plot(res2$Prob,ylab = "Prob", xlab = "N sample", type = "b", main =  "Try 2")
lines(x=c(0,6),y=c(1/3,1/3),co="red",lwd=2)
legend("right", legend="Target Prob",
col="red", lty=1:2, cex=0.8)
mtext("Estimacion de probabilidad", side= 3)
#PLOT 3
plot(res3$Prob,ylab = "Prob", xlab = "N sample", type = "b", main = "Try 3")
lines(x=c(0,6),y=c(1/3,1/3),co="red",lwd=2)
legend("right", legend="Target Prob",
col="red", lty=1:2, cex=0.8)
#PLOT 4
plot(res4$Prob,ylab = "Prob", xlab = "N sample", type = "b", main =  "Try 4")
lines(x=c(0,6),y=c(1/3,1/3),co="red",lwd=2)
legend("right", legend="Target Prob",
col="red", lty=1:2, cex=0.8)
# set the plotting area into a 1*2 array
mtext("Estimacion de probabilidad", side= 3)
par(mfrow=c(2,2))
#PLOT 1
plot(res$Prob,ylab = "Prob", xlab = "N sample", type = "b", main = "Try 1")
lines(x=c(0,6),y=c(1/3,1/3),co="red",lwd=2)
legend("right", legend="Target Prob",
col="red", lty=1:2, cex=0.8)
#PLOT 2
plot(res2$Prob,ylab = "Prob", xlab = "N sample", type = "b", main =  "Try 2")
lines(x=c(0,6),y=c(1/3,1/3),co="red",lwd=2)
legend("right", legend="Target Prob",
col="red", lty=1:2, cex=0.8)
#PLOT 3
plot(res3$Prob,ylab = "Prob", xlab = "N sample", type = "b", main = "Try 3")
lines(x=c(0,6),y=c(1/3,1/3),co="red",lwd=2)
legend("right", legend="Target Prob",
col="red", lty=1:2, cex=0.8)
#PLOT 4
plot(res4$Prob,ylab = "Prob", xlab = "N sample", type = "b", main =  "Try 4")
lines(x=c(0,6),y=c(1/3,1/3),co="red",lwd=2)
legend("right", legend="Target Prob",
col="red", lty=1:2, cex=0.8)
# set the plotting area into a 1*2 array
par(mfrow=c(2,2))
mtext("Estimacion de probabilidad")
#PLOT 1
plot(res$Prob,ylab = "Prob", xlab = "N sample", type = "b", main = "Try 1")
lines(x=c(0,6),y=c(1/3,1/3),co="red",lwd=2)
legend("right", legend="Target Prob",
col="red", lty=1:2, cex=0.8)
#PLOT 2
plot(res2$Prob,ylab = "Prob", xlab = "N sample", type = "b", main =  "Try 2")
lines(x=c(0,6),y=c(1/3,1/3),co="red",lwd=2)
legend("right", legend="Target Prob",
col="red", lty=1:2, cex=0.8)
#PLOT 3
plot(res3$Prob,ylab = "Prob", xlab = "N sample", type = "b", main = "Try 3")
lines(x=c(0,6),y=c(1/3,1/3),co="red",lwd=2)
legend("right", legend="Target Prob",
col="red", lty=1:2, cex=0.8)
#PLOT 4
plot(res4$Prob,ylab = "Prob", xlab = "N sample", type = "b", main =  "Try 4")
lines(x=c(0,6),y=c(1/3,1/3),co="red",lwd=2)
legend("right", legend="Target Prob",
col="red", lty=1:2, cex=0.8)
# set the plotting area into a 1*2 array
par(mfrow=c(2,2))
#PLOT 1
plot(res$Prob,ylab = "Prob", xlab = "N sample", type = "b", main = "Try 1")
lines(x=c(0,6),y=c(1/3,1/3),co="red",lwd=2)
legend("right", legend="Target Prob",
col="red", lty=1:2, cex=0.8)
#PLOT 2
plot(res2$Prob,ylab = "Prob", xlab = "N sample", type = "b", main =  "Try 2")
lines(x=c(0,6),y=c(1/3,1/3),co="red",lwd=2)
legend("right", legend="Target Prob",
col="red", lty=1:2, cex=0.8)
#PLOT 3
plot(res3$Prob,ylab = "Prob", xlab = "N sample", type = "b", main = "Try 3")
lines(x=c(0,6),y=c(1/3,1/3),co="red",lwd=2)
legend("right", legend="Target Prob",
col="red", lty=1:2, cex=0.8)
#PLOT 4
plot(res4$Prob,ylab = "Prob", xlab = "N sample", type = "b", main =  "Try 4")
lines(x=c(0,6),y=c(1/3,1/3),co="red",lwd=2)
legend("right", legend="Target Prob",
col="red", lty=1:2, cex=0.8)
mtext("Estimacion de probabilidad")
par(mfrow=c(2,2),oma = c(0, 0, 2, 0))
#PLOT 1
plot(res$Prob,ylab = "Prob", xlab = "N sample", type = "b", main = "Try 1")
lines(x=c(0,6),y=c(1/3,1/3),co="red",lwd=2)
legend("right", legend="Target Prob",
col="red", lty=1:2, cex=0.8)
#PLOT 2
plot(res2$Prob,ylab = "Prob", xlab = "N sample", type = "b", main =  "Try 2")
lines(x=c(0,6),y=c(1/3,1/3),co="red",lwd=2)
legend("right", legend="Target Prob",
col="red", lty=1:2, cex=0.8)
#PLOT 3
plot(res3$Prob,ylab = "Prob", xlab = "N sample", type = "b", main = "Try 3")
lines(x=c(0,6),y=c(1/3,1/3),co="red",lwd=2)
legend("right", legend="Target Prob",
col="red", lty=1:2, cex=0.8)
#PLOT 4
plot(res4$Prob,ylab = "Prob", xlab = "N sample", type = "b", main =  "Try 4")
lines(x=c(0,6),y=c(1/3,1/3),co="red",lwd=2)
legend("right", legend="Target Prob",
col="red", lty=1:2, cex=0.8)
mtext("Estimacion de probabilidad")
mtext("Estimacion de probabilidad", outer = TRUE, cex = 1.5)
mtext("Estimaci√≥n de probabilidad", outer = TRUE, cex = 1.5)
a <- c(1,2,3)
b <- c("a","b","c")
c <- data.frame(cbind(a,b))
c
class(d$a)
class(c$a)
c <- as.data.frame(cbind(a,b))
lass(d$a)
class(c$a)
c <- as.data.frame(cbind(as.vector(a),b))
class(c$a)
class(as.vector(c$a)
d <- a
d
d <- 5
d
a
r <- c
r
r$b[1]="f"
r
c
print("EL numero es", d)
print("EL numero es" + 2)
print("EL numero es " +
2)
?quantmod.getSymbols
?getSymbol
# Load packages
library(quantmod)
#getSymbols(Symbols = "GGAL.BA", auto_assign = TRUE)
from <- Sys.Date() - 60
to <- Sys.Date()
df <- getSymbols(Symbols = "GGAL.BA", from=from, to=to, env = NULL)
df$close_ayer[2:nrow(df)] = df[1:nrow(df)]
df$close_ayer[2:nrow(df)] = df[1:nrow(df)-1]
df$close_ayer[2:nrow(df)] = df[1:(nrow(df)-1)]
a<-c(100,120,130)
cbind.data.frame(a)
d<-cbind.data.frame(a)
d$aayer[1:2] <- a[2:3]
d$aayer <- a*0
d$aayer[1:2] <- a[2:3]
d$aayer
d$aayer[2:3] <- a[1:2]
d$aayer
d$aayer <- a*0
d$aayer[2:3] <- a[1:2]
d$aayer
df$prev <- df$GGAL.BA.Close * 0
df$prev[2:nrow(df)] = df[1:(nrow(df)-1)]
(nrow(df)-1
(nrow(df)-1)
nrow(df)
nrow(df)
(nrow(df)-1)]
(nrow(df)-1)
df$prev[2:nrow(df)] = df[1:(nrow(df)-1)]
df$prev[2:nrow(df)] = df$GGAL.BA.Close[1:(nrow(df)-1)]
df$prev
df.tail()
tail(df)
df <- getSymbols(Symbols = "GGAL.BA", from=from, to=to, env = NULL)
df$prev <- df$GGAL.BA.Close * 0
df$prev[2:nrow(df)] = df$GGAL.BA.Close[1:(nrow(df)-1)]
tail(df)
model <- lm(df$GGAL.BA.Close ~ df$prev)
model
summary(model)
plot(df$GGAL.BA.Close ~ df$prev)
plot(df$GGAL.BA.Close ,df$prev)
plot(x=df$prev,y=df$GGAL.BA.Close)
scatter(x=df$prev,y=df$GGAL.BA.Close)
points(x=df$prev,y=df$GGAL.BA.Close)
points(x=df$prev,y=df$GGAL.BA.Close)
predict(model,df$prev)
p <- predict(model,df$prev)
plot(p)
plot(df$GGAL.BA.Close)
lines(p, col= "yellow" ,lwd = 3)
aux <- df$GGAL.BA.Close
aux$GGAL.BA.Close <- unname(p)
plot(df$GGAL.BA.Close)
lines(aux, col= "yellow" ,lwd = 3)
df$prev[1] <- mean(df$GGAL.BA.Close)
df$prev[2:nrow(df)] = df$GGAL.BA.Close[1:(nrow(df)-1)]
tail(df)
head(df)
?pairs
# Load packages
library(quantmod)
#getSymbols(Symbols = "GGAL.BA", auto_assign = TRUE)
from <- Sys.Date() - 60
to <- Sys.Date()
df <- getSymbols(Symbols = "AAPL", from=from, to=to, env = NULL)
names(df)<-c("Open","High", "Low", "Close", "Volume", "Adjusted")
pairs(df)
is.na(df)
sum(is.na(mplstemp.zoo))
sum(is.na(df))
setwd("/Users/isajarspector/Desktop/algoTrading/Clase 03")
data_cor <- read.csv("data//Correlacion.csv",header=T,sep=",")
pairs(data_cor)
View(data_cor)
View(data_cor)
View(df)
cor(df$Open,df$Close)
cor(df)
pairs(df)
corrplot(df, method = "color")
f<-data.frame(date=index(df), coredata(df))
f
pairs(f)
require(ggpubr)
install.packages(ggpubr)
install.packages("ggpubr")
clear
rm
rm()
require("ggpubr")
corrplot(df, method = "color")
require(ggpubr)
corrplot(df, method = "color")
library(ggpubr)
corrplot(df, method = "color")
corrplot()
install.packages("corrplot")
require(corrplot)
corrplot(df, method = "color")
corrplot(f, method = "color")
df
f
?corrplot
corrplot(f, method = "color")
length(f)
class(f)
ncolr(f)
ncol(f)
nrow(f)
corrplot(f, method = "color")
sum(is.na(f))
corrplot(f[,2:ncol(f)], method = "color")
corrplot(f)
corrplot(f, method = "color",cl.lim = (-1,-1))
corrplot(f, method = "color" ,cl.lim = c(-1,-1))
corrplot(f, method = "color" ,cl.lim = c(-1,1))
corrplot(f, method = "color" ,cl.lim = c(0,20))
corrplot(f, method = "color" ,cl.lim = c(0,100))
corrplot(f, method = "color" ,cl.lim = c(-100,100))
corrplot(data_cor, method = "color")
corrplot(data_cor)
corrplot(f, method = "color" ,cl.lim = c(o,ncol(f)))
corrplot(f, method = "color" ,cl.lim = c(0,ncol(f)))
pairs(df)
a<-pairs(df)
a
corr_mat<-cor(df)
corr_mat
corrplot(corr_mat, method = "color")
plot(df$Close, main = "Cierre")
plot(df$Close, main = "Cierre", grid.ticks.on = "days", major.ticks = "days", grid.col = "lightgrey")
require(ggplot2)
ggplot(df)
ggplot(f, aes(f$date,f$Close))
ggplot(f, aes(date,Close))
ggplot(f, aes(date,Close)+ geom_point() + geom_line(colour = "blue"))
ggplot(f, aes(date, close))+ geom_point() + geom_line(colour = "blue")+xlab("Year")+ ylab("Total Rec Visitors")+ggtitle("Glacier Annual Recreational Visitors")
ggplot(f, aes(date, Close))+ geom_point() + geom_line(colour = "blue")+xlab("Year")+ ylab("Total Rec Visitors")+ggtitle("Glacier Annual Recreational Visitors")
ggplot(df$Close+ geom_point() + geom_line(colour = "blue")+xlab("Year")+ ylab("Total Rec Visitors")+ggtitle("Glacier Annual Recreational Visitors")
?ggplot
ggplot(df$Close, mapping = geom_point() + geom_line(colour = "blue")+xlab("Year")+ ylab("Total Rec Visitors")+ggtitle("Glacier Annual Recreational Visitors")
ggplot(df$Close)+geom_point() + geom_line(colour = "blue")+xlab("Year")+ ylab("Total Rec Visitors")+ggtitle("Glacier Annual Recreational Visitors")
ggplot(df, aes(close))+ geom_point() + geom_line(colour = "blue")+xlab("Year")+ ylab("Total Rec Visitors")+ggtitle("Glacier Annual Recreational Visitors")
ggplot(df, aes(index(df),close))+ geom_point() + geom_line(colour = "blue")+xlab("Year")+ ylab("Total Rec Visitors")+ggtitle("Glacier Annual Recreational Visitors")
index(df)
ggplot(f, aes(date, Close))+ geom_point() + geom_line(colour = "blue")+xlab("Year")+ ylab("Total Rec Visitors")+ggtitle("Glacier Annual Recreational Visitors")
corrplot(corr_mat, method = "circle")
df$rsi_6 <- RSI(df$Close,6)
f<-data.frame(date=index(df), coredata(df))
sum(is.na(f))
pairs(f)
corr_mat<-cor(df)
corrplot(corr_mat, method = "circle")
f[is.na(f)==T]
f[f[is.na(f)==T]]
f[,is.na(f)==T]
f[is.na(f)==T]
f[is.na(f)==T,]
f
is.na(f)
f[,is.na(f)]
f[is.na(f)]
f[is.na(f),]
subset(f,is.na(f)==T)
apply(is.na(f), 2, which)
which(is.na(f))
apply(is.na(f), 2, which)
?apply
na.fill(f$rsi_6,mean(f$rsi_6))
mean(f$rsi_6)
na.fill(f$rsi_6,mean(f$rsi_6[7:nrow(f)]))
mean(f$rsi_6[7:nrow(f)]
mean(f$rsi_6[7:nrow(f)])
mean(f$rsi_6[7:nrow(f)])
sum(is.na(f))
f
?na.fill
f<-na.fill(f$rsi_6,mean(f$rsi_6[7:nrow(f)]))
sum(is.na(f))
pairs(f)
f
f<-data.frame(date=index(df), coredata(df))
setnafill(f$rsi_6,mean(f$rsi_6[7:nrow(f)]))
?setnafill
f
f$rsi_6 <- na.fill(f$rsi_6,mean(f$rsi_6[7:nrow(f)]))
#CORRELACION
pairs(f)
corr_mat<-cor(df)
corrplot(corr_mat, method = "circle")
#TRATO DE NANS
sum(is.na(f))
corr_mat<-cor(df)
corrplot(corr_mat, method = "circle")
corr_mat
f
class(f)
class(f$rsi_6)
sum(is.na(df))
which(is.na(df))
apply(is.na(df), 2, which)
df$rsi_6 <- na.fill(df$rsi_6,mean(f$rsi_6[7:nrow(f)]))
f<-data.frame(date=index(df), coredata(df))
pairs(f)
corr_mat<-cor(df)
corr_mat
corrplot(corr_mat, method = "circle")
corrplot(corr_mat, method = "number")
df$sma_10 <- SMA(df$Close,10)
sum(is.na(df))
apply(is.na(df), 2, which)
which(is.na(df))
#Para sma
df$sma_10 <- na.fill(df$sma_10,mean(f$sma_10[10:nrow(f)]))
mean(f$sma_10[11:nrow(f)])
#Para sma
df$sma_10 <- na.fill(df$sma_10,mean(df$sma_10[10:nrow(f)]))
#Para sma
na.approx(df$sma_10)
#Para sma
df$sma_10 <-na.approx(df$sma_10)
sum(is.na(df))
corr_mat<-cor(df)
corrplot(corr_mat, method = "number")
df$rsi_11 <- RSI(df$Close,11)
df$rsi_16 <- RSI(df$Close,16)
df$rsi_21 <- RSI(df$Close,21)
na.approx(df)
na.approx(df[,c(9,10,11)])
na.approx(df[,9:11])
#Para sma
df$sma_10 <-na.approx(df,9:11)
#Para sma
na.approx(df,9:11)
#Para sma
na.approx(df[,9:11)
#Para sma
na.approx(df[,9:11])
#Para sma
na.approx(df[,9])
#Para sma
na.approx(df[,10])
#Para sma
na.approx(df[,9:11])
#Para sma
na.approx(df[,10:11])
ix <- colSums(!is.na(df)) > 0
ix
df
colSums(!is.na(df)) > 0
df[, ix] <- na.approx(df[, ix]); df
